#!/bin/sh

## This script gets the latest version of PKGBUILD of a given package from ABS or AUR
#RCol='\e[0m'    # Text Reset

# Regular           Bold                Underline           High Intensity      BoldHigh Intens     Background          High Intensity Backgrounds
#Bla='\e[0;30m';     BBla='\e[1;30m';    UBla='\e[4;30m';    IBla='\e[0;90m';    BIBla='\e[1;90m';   On_Bla='\e[40m';    On_IBla='\e[0;100m';
#Red='\e[0;31m';     BRed='\e[1;31m';    URed='\e[4;31m';    IRed='\e[0;91m';    BIRed='\e[1;91m';   On_Red='\e[41m';    On_IRed='\e[0;101m';
#Gre='\e[0;32m';     BGre='\e[1;32m';    UGre='\e[4;32m';    IGre='\e[0;92m';    BIGre='\e[1;92m';   On_Gre='\e[42m';    On_IGre='\e[0;102m';
#Yel='\e[0;33m';     BYel='\e[1;33m';    UYel='\e[4;33m';    IYel='\e[0;93m';    BIYel='\e[1;93m';   On_Yel='\e[43m';    On_IYel='\e[0;103m';
#Blu='\e[0;34m';     BBlu='\e[1;34m';    UBlu='\e[4;34m';    IBlu='\e[0;94m';    BIBlu='\e[1;94m';   On_Blu='\e[44m';    On_IBlu='\e[0;104m';
#Pur='\e[0;35m';     BPur='\e[1;35m';    UPur='\e[4;35m';    IPur='\e[0;95m';    BIPur='\e[1;95m';   On_Pur='\e[45m';    On_IPur='\e[0;105m';
#Cya='\e[0;36m';     BCya='\e[1;36m';    UCya='\e[4;36m';    ICya='\e[0;96m';    BICya='\e[1;96m';   On_Cya='\e[46m';    On_ICya='\e[0;106m';
#Whi='\e[0;37m';     BWhi='\e[1;37m';    UWhi='\e[4;37m';    IWhi='\e[0;97m';    BIWhi='\e[1;97m';   On_Whi='\e[47m';    On_IWhi='\e[0;107m';

declare -a abs_repos=("core" "extra" "community" "multilib" "testing" "community-testing" "multilib-testing" "staging" "community-staging" "multilib-staging" "gnome-unsatble" "kde-unstable");
function pkgbget_func() {
	for i in "${abs_repos[@]}"; do
		if [ -d /var/abs/${i}/${1} ]; then
			abs_path=/var/abs/${i}/${1};
			abs_sync_path=${i}/${1};
		fi
	done
	if [ -z "${abs_path}" ]; then
		aurstatus=$(git ls-remote --exit-code "${1}");
		if [ "${aurstatus}" = 404 ]; then
			echo -e "${Red}***${RCol} Package ${Yel}${1} ${Red}does not exist${RCol}";
			unset abs_path abs_sync_path cur_dir aurstatus;
			return 1;
		elif [ -d ${AURDEST}/${1} ]; then
			echo -e "${Yel}PKGBUILD${RCol} for ${Blu}${1} ${RCol}found in ${Pur}${AURDEST}/${1}${RCol}, updating it to latest version";
			cur_dir="${PWD}";
			cd ${AURDEST}/${1};
			git pull;
			cd "${cur_dir}";
		else
			echo -e "${Yel}PKGBUILD${RCol} for ${Blu}${1}${RCol} found in ${Pur}AUR${RCol}, cloning the latest version";
			git clone "https://aur.archlinux.org/${1}" ${AURDEST}/${1};
		fi
	else
		echo -e "${Yel}PKGBUILD${RCol} for ${Blu}${1}${RCol} found in ${Blu}ABS ${Cya}${abs_sync_path}${RCol}, getting the latest version";
		sudo abs ${abs_sync_path};
		cp -rvf ${abs_path} ${AURDEST};
	fi

	unset abs_path abs_sync_path cur_dir aurstatus;
}

for i in "${@}"; do
	if [ -n "${i}" ]; then
		pkgbget_func ${i};
		exit ${?};
	fi
done
